name: build-and-push
on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  ECR_REPO: riches-reach-ai

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Compute content fingerprints
        run: |
          echo "Compute content fingerprints..."
          CELERY_SHA=$(sha256sum backend/backend/richesreach/celery.py | cut -d' ' -f1)
          INIT_SHA=$(sha256sum backend/backend/richesreach/__init__.py | cut -d' ' -f1)
          echo "CELERY_SHA=$CELERY_SHA" >> $GITHUB_ENV
          echo "INIT_SHA=$INIT_SHA" >> $GITHUB_ENV
          echo "Computed hashes:"
          echo "  celery.py: $CELERY_SHA"
          echo "  __init__.py: $INIT_SHA"

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr

      - name: Ensure ECR repo exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPO" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "$ECR_REPO" >/dev/null

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: backend/backend
          file: backend/backend/Dockerfile.production
          push: true
          platforms: linux/amd64
          no-cache: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:${{ github.sha }}
          build-args: |
            GIT_SHA=${{ github.sha }}
            BUILD_MARKER=${{ github.run_id }}-${{ github.run_attempt }}
            CELERY_SHA=${{ env.CELERY_SHA }}
            INIT_SHA=${{ env.INIT_SHA }}

      - name: Show digest
        id: digest
        run: |
          DIGEST=$(aws ecr describe-images \
            --repository-name "$ECR_REPO" \
            --image-ids imageTag="${{ github.sha }}" \
            --query 'imageDetails[0].imageDigest' --output text)
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT
          echo "Image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:${{ github.sha }}"
          echo "Digest: $DIGEST"

      - name: Verify image contents (pull + inspect)
        run: |
          IMG="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:${{ github.sha }}"
          docker pull "$IMG"
          echo "== __build.txt =="
          docker run --rm "$IMG" cat /app/__build.txt || true
          echo "== celery.py head =="
          docker run --rm "$IMG" /bin/sh -lc 'sed -n "1,50p" /app/richesreach/celery.py || true'
          echo "== __init__.py head =="
          docker run --rm "$IMG" /bin/sh -lc 'sed -n "1,50p" /app/richesreach/__init__.py || true'
