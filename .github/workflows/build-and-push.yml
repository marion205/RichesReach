name: Build & Push to ECR

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "backend/backend/**"
      - "Dockerfile"
      - ".github/workflows/build-and-push.yml"

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 498606688292.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: riches-reach-streaming
  IMAGE_TAG: sha-${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Sanity checks so this never breaks silently
      - name: Verify build context & Dockerfile exist
        run: |
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
          ls -al
          test -f Dockerfile || (echo "Dockerfile missing at repo root"; exit 1)
          test -f backend/backend/requirements.txt || (echo "backend/backend/requirements.txt missing"; exit 1)
          test -f backend/backend/richesreach/settings_production.py || (echo "settings_production.py missing"; exit 1)

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (new Dockerfile at repo root, correct context)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          build-args: |
            BUILD_SHA=${{ github.sha }}
          no-cache: true

      - name: Resolve and print image digest
        id: digest
        run: |
          DIGEST=$(aws ecr describe-images \
            --repository-name riches-reach-streaming \
            --image-ids imageTag=sha-${{ github.sha }} \
            --query 'imageDetails[0].imageDigest' \
            --output text --region us-east-1)
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"
          echo "âœ… Image pushed with digest: $DIGEST"
