name: Build & Push to ECR

on:
  push:
    branches: [ main ]
    paths:
      - "backend/**"
      - "Dockerfile"
      - ".github/workflows/build-and-push.yml"

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 498606688292.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: riches-reach-streaming
  IMAGE_TAG: sha-${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS creds (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG -f backend/backend/Dockerfile.production backend/backend

      - name: Create repo if missing (optional)
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" || \
          aws ecr create-repository --repository-name "$ECR_REPOSITORY" >/dev/null

      - name: Tag & Push
        run: |
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Output pushed digest
        id: digest
        run: |
          DIGEST=$(aws ecr describe-images --repository-name "$ECR_REPOSITORY" \
            --image-ids imageTag="$IMAGE_TAG" --query 'imageDetails[0].imageDigest' --output text)
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"
          echo "âœ… Image pushed with digest: $DIGEST"

      - name: Persist digest (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: image-digest
          path: |
            ./  # optional if you want to capture additional metadata
