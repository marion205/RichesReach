{
    "family": "db-setup-task",
    "networkMode": "awsvpc",
    "requiresCompatibilities": ["FARGATE"],
    "cpu": "256",
    "memory": "512",
    "executionRoleArn": "arn:aws:iam::498606688292:role/ecsTaskExecutionRole",
    "taskRoleArn": "arn:aws:iam::498606688292:role/ecsTaskRole",
    "containerDefinitions": [
        {
            "name": "db-setup",
            "image": "python:3.11-slim",
            "cpu": 0,
            "essential": true,
            "command": [
                "/bin/sh",
                "-c",
                "pip install psycopg2-binary && python -c \"import psycopg2; conn = psycopg2.connect(host='riches-reach-postgres.cmhsue8oy30k.us-east-1.rds.amazonaws.com', port=5432, user='richesreach', password='@Master22', sslmode='require'); conn.autocommit = True; cursor = conn.cursor(); cursor.execute('DO \\$\\$ BEGIN IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = \\'appuser\\') THEN CREATE ROLE appuser LOGIN PASSWORD \\'AppUser2025Secure!\\'; END IF; END\\$\\$;'); cursor.execute('SELECT 1 FROM pg_database WHERE datname = \\'appdb\\''); result = cursor.fetchone(); print('Database exists:', result is not None); if not result: cursor.execute('CREATE DATABASE appdb OWNER appuser TEMPLATE template1'); print('Created appdb'); cursor.execute('GRANT ALL PRIVILEGES ON DATABASE appdb TO appuser'); print('Granted privileges'); test_conn = psycopg2.connect(host='riches-reach-postgres.cmhsue8oy30k.us-east-1.rds.amazonaws.com', port=5432, user='appuser', password='AppUser2025Secure!', database='appdb', sslmode='require'); print('Test connection successful'); test_conn.close(); conn.close(); print('Database setup completed successfully!')\""
            ],
            "logConfiguration": {
                "logDriver": "awslogs",
                "options": {
                    "awslogs-group": "/ecs/db-setup",
                    "awslogs-region": "us-east-1",
                    "awslogs-stream-prefix": "ecs"
                }
            }
        }
    ]
}
