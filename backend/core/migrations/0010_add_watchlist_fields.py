# Generated by Django 4.2.1 on 2025-08-31 15:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0009_stock_stockdata_watchlist'),
    ]

    operations = [
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Main Portfolio', max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolios', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.AlterModelOptions(
            name='watchlist',
            options={},
        ),
        migrations.RenameField(
            model_name='watchlist',
            old_name='added_at',
            new_name='created_at',
        ),
        migrations.AlterUniqueTogether(
            name='watchlist',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='watchlist',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='watchlist',
            name='is_public',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='watchlist',
            name='is_shared',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='watchlist',
            name='name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='watchlist',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterUniqueTogether(
            name='watchlist',
            unique_together={('user', 'name')},
        ),
        migrations.CreateModel(
            name='StockDiscussion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('discussion_type', models.CharField(choices=[('analysis', 'Stock Analysis'), ('news', 'Market News'), ('strategy', 'Trading Strategy'), ('question', 'Question'), ('meme', 'Meme/Entertainment')], default='analysis', max_length=20)),
                ('is_analysis', models.BooleanField(default=False)),
                ('analysis_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_discussions', to=settings.AUTH_USER_MODEL)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussions', to='core.stock')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_discussions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PriceAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('above', 'Price Above'), ('below', 'Price Below'), ('percent_change', 'Percent Change'), ('volume_spike', 'Volume Spike')], max_length=20)),
                ('target_value', models.DecimalField(decimal_places=4, max_digits=15)),
                ('is_active', models.BooleanField(default=True)),
                ('is_triggered', models.BooleanField(default=False)),
                ('triggered_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.stock')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DiscussionComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('discussion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.stockdiscussion')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_comments', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussion_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.RemoveField(
            model_name='watchlist',
            name='notes',
        ),
        migrations.RemoveField(
            model_name='watchlist',
            name='stock',
        ),
        migrations.CreateModel(
            name='WatchlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('target_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.stock')),
                ('watchlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.watchlist')),
            ],
            options={
                'unique_together': {('watchlist', 'stock')},
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_type', models.CharField(choices=[('first_post', 'First Discussion Post'), ('first_watchlist', 'First Watchlist'), ('first_portfolio', 'First Portfolio'), ('popular_post', 'Popular Post (10+ likes)'), ('viral_post', 'Viral Post (100+ likes)'), ('consistent_poster', 'Consistent Poster (7 days)'), ('stock_expert', 'Stock Expert (50+ posts)'), ('watchlist_curator', 'Watchlist Curator (5+ public watchlists)')], max_length=30)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(default='üèÜ', max_length=50)),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-earned_at'],
                'unique_together': {('user', 'achievement_type')},
            },
        ),
        migrations.CreateModel(
            name='StockSentiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positive_votes', models.IntegerField(default=0)),
                ('negative_votes', models.IntegerField(default=0)),
                ('neutral_votes', models.IntegerField(default=0)),
                ('total_votes', models.IntegerField(default=0)),
                ('sentiment_score', models.DecimalField(decimal_places=4, default=0, max_digits=5)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentiments', to='core.stock')),
            ],
            options={
                'unique_together': {('stock',)},
            },
        ),
        migrations.CreateModel(
            name='SocialFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(max_length=20)),
                ('content_id', models.IntegerField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_feeds', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'content_type', 'content_id')},
            },
        ),
        migrations.CreateModel(
            name='PortfolioPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_type', models.CharField(choices=[('long', 'Long'), ('short', 'Short'), ('paper', 'Paper Trade')], default='paper', max_length=10)),
                ('shares', models.DecimalField(decimal_places=6, max_digits=15)),
                ('entry_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('current_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('entry_date', models.DateTimeField(auto_now_add=True)),
                ('exit_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='core.portfolio')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.stock')),
            ],
            options={
                'unique_together': {('portfolio', 'stock')},
            },
        ),
    ]
