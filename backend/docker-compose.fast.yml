# Fast Docker Compose for RichesReach AI - OPTIMIZED FOR SPEED
version: '3.8'

services:
  # Fast AI Service
  ai-service:
    build:
      context: .
      dockerfile: Dockerfile.optimized
      # Use BuildKit for faster builds
      args:
        BUILDKIT_INLINE_CACHE: 1
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
    volumes:
      # Mount only necessary files for development
      - ./core:/app/core:ro
      - ./main.py:/app/main.py:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching (lightweight)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # PostgreSQL (if needed)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: richesreach
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
