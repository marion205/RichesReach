# ---- base ----
FROM python:3.11-slim AS base
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# ---- deps: build wheels once ----
FROM base AS deps
WORKDIR /app

# Copy requirements and install dependencies
COPY requirements.streaming.txt requirements.txt
RUN pip install --upgrade pip wheel setuptools && \
    pip wheel --no-cache-dir --no-deps -r requirements.txt -w /wheels

# ---- runtime: copy only wheels + src ----
FROM python:3.11-slim AS runtime
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/app/.local/bin:$PATH"

# Install only runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

WORKDIR /app

# Copy wheels and install
COPY --from=deps /wheels /wheels
RUN pip install --no-cache /wheels/* && rm -rf /wheels

# Copy application code (only necessary files)
COPY main.py .
COPY backend/backend/core/streaming_producer.py ./core/
COPY backend/backend/core/streaming_consumer.py ./core/
COPY ml_prediction_service.py .
COPY live_data_feed_config.json .
COPY ml_model_config.json .
COPY enhanced_producer_config.json .
COPY data_validation_schemas.json .
COPY models/ ./models/

# Create non-root user
RUN useradd -m -u 1000 appuser && \
    chown -R appuser:appuser /app
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Start command
CMD ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
