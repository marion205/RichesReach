name: Deploy to Production

on:
  push:
    branches: [ main ]
    paths:
      - "backend/**"
      - ".github/workflows/**"

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: riches-reach-ai
  ECS_CLUSTER: riches-reach-ai-production-cluster
  ECS_SERVICE: riches-reach-ai-ai

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          GIT_SHA: ${{ github.sha }}
        run: |
          docker build -f backend/backend/Dockerfile.production --build-arg GIT_SHA=$GIT_SHA -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
          
      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service ${{ env.ECS_SERVICE }} \
            --force-new-deployment \
            --wait-for-service-stability
            
      - name: Test deployment
        run: |
          sleep 30
          curl -f http://riches-reach-alb-1199497064.us-east-1.elb.amazonaws.com/health || exit 1
          
      - name: URL smoke test (server-side routing)
        run: |
          python - <<'PY'
          import os, django
          os.environ.setdefault("DJANGO_SETTINGS_MODULE", "richesreach.settings_production")
          django.setup()
          from django.urls import resolve
          for p in [
              "/api/tax/optimization-summary",
              "/api/tax/loss-harvesting",
              "/api/tax/smart-lot-optimizer-v2",
              "/api/tax/two-year-gains-planner",
              "/api/tax/wash-sale-guard-v2",
          ]:
              resolve(p)
              print("OK", p)
          PY
