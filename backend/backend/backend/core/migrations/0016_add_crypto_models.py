# Generated by Django 4.2.7

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0014_enhance_user_security'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cryptocurrency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('coingecko_id', models.CharField(max_length=50, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staking_available', models.BooleanField(default=False)),
                ('min_trade_amount', models.DecimalField(decimal_places=8, default=0.0001, max_digits=20)),
                ('precision', models.IntegerField(default=8)),
                ('volatility_tier', models.CharField(choices=[('LOW', 'Low Volatility'), ('MEDIUM', 'Medium Volatility'), ('HIGH', 'High Volatility'), ('EXTREME', 'Extreme Volatility')], default='HIGH', max_length=20)),
                ('is_sec_compliant', models.BooleanField(default=False)),
                ('regulatory_status', models.CharField(default='UNKNOWN', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cryptocurrency',
                'verbose_name_plural': 'Cryptocurrencies',
                'db_table': 'crypto_currencies',
            },
        ),
        migrations.CreateModel(
            name='CryptoPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_usd', models.DecimalField(decimal_places=8, max_digits=20)),
                ('price_btc', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('volume_24h', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('market_cap', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('price_change_24h', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('price_change_percentage_24h', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('rsi_14', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('macd', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('bollinger_upper', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('bollinger_lower', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('volatility_7d', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('volatility_30d', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('momentum_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('sentiment_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='core.cryptocurrency')),
            ],
            options={
                'db_table': 'crypto_prices',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CryptoPortfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_value_usd', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total_cost_basis', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total_pnl', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total_pnl_percentage', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('portfolio_volatility', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('sharpe_ratio', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('max_drawdown', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('diversification_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('top_holding_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_portfolio', to='core.user')),
            ],
            options={
                'db_table': 'crypto_portfolios',
            },
        ),
        migrations.CreateModel(
            name='CryptoHolding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=20)),
                ('average_cost', models.DecimalField(decimal_places=8, max_digits=20)),
                ('current_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('current_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('unrealized_pnl', models.DecimalField(decimal_places=2, max_digits=20)),
                ('unrealized_pnl_percentage', models.DecimalField(decimal_places=4, max_digits=10)),
                ('staked_quantity', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('staking_rewards', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('staking_apy', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('is_collateralized', models.BooleanField(default=False)),
                ('collateral_value', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('loan_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cryptocurrency')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holdings', to='core.cryptoportfolio')),
            ],
            options={
                'db_table': 'crypto_holdings',
            },
        ),
        migrations.CreateModel(
            name='CryptoTrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell'), ('STAKING_REWARD', 'Staking Reward'), ('AIRDROP', 'Airdrop')], max_length=20)),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=20)),
                ('price_per_unit', models.DecimalField(decimal_places=8, max_digits=20)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('fees', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('order_id', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(default='COMPLETED', max_length=20)),
                ('execution_time', models.DateTimeField(auto_now_add=True)),
                ('is_sbloc_funded', models.BooleanField(default=False)),
                ('sbloc_loan_id', models.CharField(blank=True, max_length=100, null=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cryptocurrency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_trades', to='core.user')),
            ],
            options={
                'db_table': 'crypto_trades',
                'ordering': ['-execution_time'],
            },
        ),
        migrations.CreateModel(
            name='CryptoMLPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_type', models.CharField(choices=[('BIG_UP_DAY', 'Big Up Day'), ('BIG_DOWN_DAY', 'Big Down Day'), ('VOLATILITY_SPIKE', 'Volatility Spike'), ('TREND_REVERSAL', 'Trend Reversal')], max_length=20)),
                ('probability', models.DecimalField(decimal_places=4, max_digits=5)),
                ('confidence_level', models.CharField(choices=[('LOW', 'Low Confidence'), ('MEDIUM', 'Medium Confidence'), ('HIGH', 'High Confidence')], max_length=20)),
                ('features_used', models.JSONField(default=dict)),
                ('model_version', models.CharField(default='v1.0', max_length=50)),
                ('prediction_horizon_hours', models.IntegerField(default=24)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('was_correct', models.BooleanField(blank=True, null=True)),
                ('actual_return', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='core.cryptocurrency')),
            ],
            options={
                'db_table': 'crypto_ml_predictions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CryptoSBLOCLoan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collateral_quantity', models.DecimalField(decimal_places=8, max_digits=20)),
                ('collateral_value_at_loan', models.DecimalField(decimal_places=2, max_digits=20)),
                ('loan_amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('interest_rate', models.DecimalField(decimal_places=4, max_digits=5)),
                ('maintenance_margin', models.DecimalField(decimal_places=4, default=0.5, max_digits=5)),
                ('liquidation_threshold', models.DecimalField(decimal_places=4, default=0.4, max_digits=5)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('LIQUIDATED', 'Liquidated'), ('REPAID', 'Repaid'), ('WARNING', 'Margin Call Warning')], default='ACTIVE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cryptocurrency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_sbloc_loans', to='core.user')),
            ],
            options={
                'db_table': 'crypto_sbloc_loans',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CryptoEducationProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=100)),
                ('module_type', models.CharField(choices=[('BASIC', 'Basic Concepts'), ('TRADING', 'Trading Strategies'), ('DEFI', 'DeFi Protocols'), ('RISK', 'Risk Management'), ('SBLOC', 'SBLOC Integration')], max_length=20)),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('quiz_attempts', models.IntegerField(default=0)),
                ('best_quiz_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_education', to='core.user')),
            ],
            options={
                'db_table': 'crypto_education_progress',
            },
        ),
        migrations.AddIndex(
            model_name='cryptoprice',
            index=models.Index(fields=['cryptocurrency', '-timestamp'], name='crypto_pric_crypto_4a8b4b_idx'),
        ),
        migrations.AddIndex(
            model_name='cryptoprice',
            index=models.Index(fields=['-timestamp'], name='crypto_pric_timesta_8a1b2c_idx'),
        ),
        migrations.AddIndex(
            model_name='cryptoholding',
            index=models.Index(fields=['portfolio', 'cryptocurrency'], name='crypto_hold_portfol_1a2b3c_idx'),
        ),
        migrations.AddIndex(
            model_name='cryptotrade',
            index=models.Index(fields=['user', '-execution_time'], name='crypto_trad_user_i_1a2b3c_idx'),
        ),
        migrations.AddIndex(
            model_name='cryptotrade',
            index=models.Index(fields=['cryptocurrency', '-execution_time'], name='crypto_trad_crypto_1a2b3c_idx'),
        ),
        migrations.AddIndex(
            model_name='cryptomlprediction',
            index=models.Index(fields=['cryptocurrency', '-created_at'], name='crypto_mlpr_crypto_1a2b3c_idx'),
        ),
        migrations.AddIndex(
            model_name='cryptomlprediction',
            index=models.Index(fields=['prediction_type', '-created_at'], name='crypto_mlpr_predic_1a2b3c_idx'),
        ),
        migrations.AddIndex(
            model_name='cryptomlprediction',
            index=models.Index(fields=['expires_at'], name='crypto_mlpr_expire_1a2b3c_idx'),
        ),
        migrations.AddConstraint(
            model_name='cryptoholding',
            constraint=models.UniqueConstraint(fields=('portfolio', 'cryptocurrency'), name='unique_portfolio_crypto'),
        ),
        migrations.AddConstraint(
            model_name='cryptoeducationprogress',
            constraint=models.UniqueConstraint(fields=('user', 'module_name'), name='unique_user_module'),
        ),
    ]
