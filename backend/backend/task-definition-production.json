{
  "family": "riches-reach-ai-task",
  "taskRoleArn": "arn:aws:iam::498606688292:role/ecsTaskRole",
  "executionRoleArn": "arn:aws:iam::498606688292:role/ecsTaskExecutionRole",
  "networkMode": "awsvpc",
  "containerDefinitions": [
    {
      "name": "riches-reach-ai",
      "image": "498606688292.dkr.ecr.us-east-1.amazonaws.com/riches-reach-ai:latest",
      "cpu": 0,
      "portMappings": [
        {
          "containerPort": 8000,
          "hostPort": 8000,
          "protocol": "tcp"
        }
      ],
      "essential": true,
      "entryPoint": [
        "/bin/sh",
        "-c"
      ],
      "command": [
        "cd /app && echo '=== PRODUCTION DEPLOYMENT ===' && echo 'Environment check:' && echo 'DJANGO_DB_ENGINE:' $DJANGO_DB_ENGINE && echo 'DJANGO_DB_HOST:' $DJANGO_DB_HOST && echo 'DJANGO_DB_NAME:' $DJANGO_DB_NAME && echo 'DJANGO_DB_USER:' $DJANGO_DB_USER && echo 'DJANGO_DB_PASSWORD:' 'SET' && echo 'DJANGO_DB_PORT:' $DJANGO_DB_PORT && python - <<'PY'\nimport os\nimport psycopg2\nimport django\nfrom django.conf import settings\n\nprint('\\n=== Testing Database Connection ===')\ntry:\n    # Test direct PostgreSQL connection\n    conn = psycopg2.connect(\n        host=os.environ['DJANGO_DB_HOST'],\n        port=os.environ['DJANGO_DB_PORT'],\n        database=os.environ['DJANGO_DB_NAME'],\n        user=os.environ['DJANGO_DB_USER'],\n        password=os.environ['DJANGO_DB_PASSWORD'],\n        sslmode='require'\n    )\n    print('✅ Direct PostgreSQL connection successful!')\n    \n    with conn.cursor() as cur:\n        cur.execute('SELECT version();')\n        version = cur.fetchone()[0]\n        print(f'PostgreSQL version: {version}')\n    \n    conn.close()\nexcept Exception as e:\n    print(f'❌ Direct PostgreSQL connection failed: {e}')\n\nprint('\\n=== Testing Django Database Configuration ===')\ntry:\n    django.setup()\n    print('Django setup complete')\n    print('Database engine:', settings.DATABASES['default']['ENGINE'])\n    print('Database host:', settings.DATABASES['default']['HOST'])\n    print('Database name:', settings.DATABASES['default']['NAME'])\n    print('Database user:', settings.DATABASES['default']['USER'])\n    \n    from django.db import connection\n    with connection.cursor() as cursor:\n        cursor.execute('SELECT 1')\n        result = cursor.fetchone()\n        print(f'✅ Django database connection successful! Result: {result}')\nexcept Exception as e:\n    print(f'❌ Django database connection failed: {e}')\n    import traceback\n    traceback.print_exc()\n\nprint('\\n=== Running Migrations ===')\ntry:\n    from django.core.management import execute_from_command_line\n    execute_from_command_line(['manage.py', 'migrate', '--noinput'])\n    print('✅ Migrations completed successfully!')\nexcept Exception as e:\n    print(f'❌ Migrations failed: {e}')\n    import traceback\n    traceback.print_exc()\n\nprint('\\n=== Collecting Static Files ===')\ntry:\n    from django.core.management import execute_from_command_line\n    execute_from_command_line(['manage.py', 'collectstatic', '--noinput'])\n    print('✅ Static files collected successfully!')\nexcept Exception as e:\n    print(f'⚠️ Static files collection failed: {e}')\n\nprint('\\n=== Starting Gunicorn Server ===')\nPY\n\necho 'Starting Gunicorn server...'\nexec gunicorn richesreach.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120"
      ],
      "environment": [
        {
          "name": "DJANGO_SETTINGS_MODULE",
          "value": "richesreach.settings"
        },
        {
          "name": "GRAPHQL_MODE",
          "value": "simple"
        },
        {
          "name": "DEBUG",
          "value": "False"
        },
        {
          "name": "STATIC_ROOT",
          "value": "/app/staticfiles"
        },
        {
          "name": "ALLOWED_HOSTS",
          "value": "*"
        }
      ],
      "mountPoints": [],
      "volumesFrom": [],
      "secrets": [
        {
          "name": "DJANGO_DB_ENGINE",
          "valueFrom": "arn:aws:secretsmanager:us-east-1:498606688292:secret:rr/db/appuser-PE1IS5:ENGINE::"
        },
        {
          "name": "DJANGO_DB_NAME",
          "valueFrom": "arn:aws:secretsmanager:us-east-1:498606688292:secret:rr/db/appuser-PE1IS5:NAME::"
        },
        {
          "name": "DJANGO_DB_USER",
          "valueFrom": "arn:aws:secretsmanager:us-east-1:498606688292:secret:rr/db/appuser-PE1IS5:USER::"
        },
        {
          "name": "DJANGO_DB_PASSWORD",
          "valueFrom": "arn:aws:secretsmanager:us-east-1:498606688292:secret:rr/db/appuser-PE1IS5:PASSWORD::"
        },
        {
          "name": "DJANGO_DB_HOST",
          "valueFrom": "arn:aws:secretsmanager:us-east-1:498606688292:secret:rr/db/appuser-PE1IS5:HOST::"
        },
        {
          "name": "DJANGO_DB_PORT",
          "valueFrom": "arn:aws:secretsmanager:us-east-1:498606688292:secret:rr/db/appuser-PE1IS5:PORT::"
        },
        {
          "name": "SECRET_KEY",
          "valueFrom": "arn:aws:secretsmanager:us-east-1:498606688292:secret:rr-django-secret-key-IdsacH"
        }
      ],
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-group": "/ecs/riches-reach-ai",
          "awslogs-region": "us-east-1",
          "awslogs-stream-prefix": "ecs"
        }
      },
      "healthCheck": {
        "command": [
          "CMD-SHELL",
          "curl -fsS http://localhost:8000/health/ || exit 1"
        ],
        "interval": 30,
        "timeout": 5,
        "retries": 3,
        "startPeriod": 60
      },
      "systemControls": []
    }
  ],
  "volumes": [],
  "placementConstraints": [],
  "requiresCompatibilities": [
    "FARGATE"
  ],
  "cpu": "512",
  "memory": "1024",
  "runtimePlatform": {
    "cpuArchitecture": "ARM64",
    "operatingSystemFamily": "LINUX"
  }
}
