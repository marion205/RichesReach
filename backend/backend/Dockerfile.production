FROM python:3.11-slim

ARG GIT_SHA
ARG BUILD_MARKER
ARG CELERY_SHA
ARG INIT_SHA
ENV PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Install deps with pip cache mount
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --no-cache-dir -r requirements.txt

# Copy ALL app code from the context (which is backend/backend)
COPY . .

# Prove the code that got copied is EXACTLY what we built from
RUN set -eux; \
    echo "Verifying content hashes..."; \
    sha256sum richesreach/celery.py | awk '{print $1}' | tee /tmp/celery.sha; \
    echo "Expected CELERY_SHA: $CELERY_SHA"; \
    echo "Actual CELERY_SHA: $(cat /tmp/celery.sha)"; \
    test "$(cat /tmp/celery.sha)" = "$CELERY_SHA" || (echo "CELERY HASH MISMATCH!" && exit 1); \
    sha256sum richesreach/__init__.py | awk '{print $1}' | tee /tmp/init.sha; \
    echo "Expected INIT_SHA: $INIT_SHA"; \
    echo "Actual INIT_SHA: $(cat /tmp/init.sha)"; \
    test "$(cat /tmp/init.sha)" = "$INIT_SHA" || (echo "INIT HASH MISMATCH!" && exit 1); \
    echo "âœ… All content hashes match!"

# cache-buster + provenance
LABEL org.opencontainers.image.revision=$GIT_SHA
LABEL build.marker=$BUILD_MARKER
RUN printf "GIT_SHA=%s\nCELERY_SHA=%s\nINIT_SHA=%s\nBUILD_MARKER=%s\n" \
    "$GIT_SHA" "$CELERY_SHA" "$INIT_SHA" "$BUILD_MARKER" > /app/__build.txt

ENV DJANGO_SETTINGS_MODULE=richesreach.settings_production
EXPOSE 8000
CMD ["gunicorn", "-b", "0.0.0.0:8000", "richesreach.wsgi:application"]
