# syntax=docker/dockerfile:1.7
FROM python:3.11-slim AS base
WORKDIR /app

# Prove which Dockerfile is used & force cache bust each run
ARG BUILD_MARKER
LABEL build.marker=${BUILD_MARKER}

# Copy only dependency manifests first
COPY requirements.txt .
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --no-cache-dir -r requirements.txt

# Copy the app (context MUST be backend/backend)
COPY . .

# Sanity: assert the files we care about are present and are the *new* ones
# (If these fail, the build stops here, which is what we want.)
RUN test -f richesreach/celery.py \
 && test -f richesreach/__init__.py \
 && python - <<'PY'
import hashlib, pathlib, sys
for p in ["richesreach/celery.py","richesreach/__init__.py"]:
    h=hashlib.sha256(pathlib.Path(p).read_bytes()).hexdigest()
    print(f"HASH {p} {h}")
PY

ENV DJANGO_SETTINGS_MODULE=richesreach.settings_production
CMD ["gunicorn","richesreach.wsgi:application","-b","0.0.0.0:8000","--workers","3","--timeout","90"]