# Generated by Django 4.2.7 on 2025-10-28 00:26

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0011_user_email_verified_user_failed_login_attempts_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="MemeCoin",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("symbol", models.CharField(max_length=20)),
                ("network", models.CharField(default="solana", max_length=20)),
                (
                    "contract_address",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("creating", "Creating"),
                            ("active", "Active"),
                            ("graduated", "Graduated"),
                            ("failed", "Failed"),
                            ("rugged", "Rugged"),
                        ],
                        default="creating",
                        max_length=20,
                    ),
                ),
                (
                    "initial_price",
                    models.DecimalField(
                        decimal_places=10, default=Decimal("0.0001"), max_digits=20
                    ),
                ),
                (
                    "current_price",
                    models.DecimalField(
                        decimal_places=10, default=Decimal("0.0001"), max_digits=20
                    ),
                ),
                (
                    "market_cap",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=20
                    ),
                ),
                (
                    "total_supply",
                    models.DecimalField(
                        decimal_places=0, default=Decimal("1000000000"), max_digits=20
                    ),
                ),
                ("holders", models.IntegerField(default=0)),
                (
                    "volume_24h",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=20
                    ),
                ),
                ("bonding_curve_active", models.BooleanField(default=True)),
                (
                    "graduation_threshold",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("69000"), max_digits=20
                    ),
                ),
                (
                    "graduation_progress",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=5
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("image_url", models.URLField(blank=True)),
                ("cultural_theme", models.CharField(blank=True, max_length=100)),
                ("ai_generated", models.BooleanField(default=False)),
                ("performance_metrics", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("graduated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_memes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Meme Coin",
                "verbose_name_plural": "Meme Coins",
                "db_table": "meme_coins",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MemeTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("image_url", models.URLField()),
                ("description", models.TextField()),
                ("cultural_theme", models.CharField(max_length=100)),
                ("ai_prompt", models.TextField()),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Meme Template",
                "verbose_name_plural": "Meme Templates",
                "db_table": "meme_templates",
            },
        ),
        migrations.CreateModel(
            name="Raid",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("target_amount", models.DecimalField(decimal_places=2, max_digits=20)),
                (
                    "current_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=20
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("planning", "Planning"),
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="planning",
                        max_length=20,
                    ),
                ),
                ("xp_reward", models.IntegerField(default=50)),
                ("success_bonus", models.IntegerField(default=100)),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "leader",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="led_raids",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "meme_coin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="raids",
                        to="core.memecoin",
                    ),
                ),
            ],
            options={
                "verbose_name": "Raid",
                "verbose_name_plural": "Raids",
                "db_table": "raids",
            },
        ),
        migrations.CreateModel(
            name="YieldPool",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "protocol",
                    models.CharField(
                        choices=[
                            ("aave", "AAVE"),
                            ("compound", "Compound"),
                            ("uniswap", "Uniswap"),
                            ("pancakeswap", "PancakeSwap"),
                            ("curve", "Curve"),
                            ("balancer", "Balancer"),
                        ],
                        max_length=20,
                    ),
                ),
                ("apy", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "tvl",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=20
                    ),
                ),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("very_high", "Very High"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("tokens", models.JSONField(default=list)),
                (
                    "min_stake",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=20
                    ),
                ),
                (
                    "max_stake",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=20
                    ),
                ),
                (
                    "fees",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=5
                    ),
                ),
                ("lock_period", models.IntegerField(default=0)),
                ("auto_compound", models.BooleanField(default=False)),
                ("cross_chain", models.BooleanField(default=False)),
                ("is_community_pool", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_pools",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Yield Pool",
                "verbose_name_plural": "Yield Pools",
                "db_table": "yield_pools",
            },
        ),
        migrations.CreateModel(
            name="YieldPosition",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "strategy",
                    models.CharField(
                        choices=[
                            ("simple_stake", "Simple Stake"),
                            ("liquidity_provision", "Liquidity Provision"),
                            ("leveraged_yield", "Leveraged Yield"),
                            ("auto_compound", "Auto Compound"),
                            ("risk_parity", "Risk Parity"),
                        ],
                        default="simple_stake",
                        max_length=20,
                    ),
                ),
                ("amount_staked", models.DecimalField(decimal_places=2, max_digits=20)),
                ("tokens_staked", models.JSONField(default=dict)),
                ("current_apy", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "earned_yield",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=20
                    ),
                ),
                (
                    "total_value",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=20
                    ),
                ),
                ("last_harvest", models.DateTimeField(blank=True, null=True)),
                (
                    "risk_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.5"), max_digits=3
                    ),
                ),
                ("auto_compound", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "pool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="positions",
                        to="core.yieldpool",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="yield_positions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Yield Position",
                "verbose_name_plural": "Yield Positions",
                "db_table": "yield_positions",
            },
        ),
        migrations.CreateModel(
            name="VoiceCommand",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "command_type",
                    models.CharField(
                        choices=[
                            ("memequest", "MemeQuest"),
                            ("trading", "Trading"),
                            ("education", "Education"),
                            ("social", "Social"),
                            ("defi", "DeFi"),
                            ("general", "General"),
                        ],
                        max_length=20,
                    ),
                ),
                ("original_command", models.TextField()),
                ("parsed_intent", models.CharField(max_length=100)),
                ("parameters", models.JSONField(default=dict)),
                (
                    "confidence",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                ("processed", models.BooleanField(default=False)),
                ("result", models.JSONField(blank=True, default=dict)),
                ("error_message", models.TextField(blank=True)),
                ("current_screen", models.CharField(blank=True, max_length=50)),
                ("active_tab", models.CharField(blank=True, max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="voice_commands",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Voice Command",
                "verbose_name_plural": "Voice Commands",
                "db_table": "voice_commands",
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("current_streak", models.IntegerField(default=0)),
                ("total_xp", models.IntegerField(default=0)),
                ("level", models.IntegerField(default=1)),
                ("wallet_address", models.CharField(blank=True, max_length=100)),
                ("wallet_connected", models.BooleanField(default=False)),
                (
                    "preferred_network",
                    models.CharField(default="solana", max_length=20),
                ),
                ("voice_enabled", models.BooleanField(default=True)),
                ("selected_voice", models.CharField(default="alloy", max_length=20)),
                (
                    "voice_speed",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("1.0"), max_digits=3
                    ),
                ),
                ("voice_emotion", models.CharField(default="neutral", max_length=20)),
                ("is_bipoc", models.BooleanField(default=False)),
                ("cultural_theme", models.CharField(blank=True, max_length=100)),
                ("community_contributions", models.IntegerField(default=0)),
                ("total_memes_created", models.IntegerField(default=0)),
                ("total_raids_joined", models.IntegerField(default=0)),
                (
                    "total_yield_earned",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=20
                    ),
                ),
                ("total_social_posts", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_active", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
                "db_table": "user_profiles",
            },
        ),
        migrations.CreateModel(
            name="UserAchievement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "achievement_type",
                    models.CharField(
                        choices=[
                            ("meme_creator", "Meme Creator"),
                            ("raid_leader", "Raid Leader"),
                            ("yield_farmer", "Yield Farmer"),
                            ("social_influencer", "Social Influencer"),
                            ("voice_master", "Voice Master"),
                            ("bipoc_champion", "BIPOC Champion"),
                            ("streak_master", "Streak Master"),
                            ("xp_legend", "XP Legend"),
                        ],
                        max_length=50,
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("icon_url", models.URLField(blank=True)),
                ("xp_reward", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="achievements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Achievement",
                "verbose_name_plural": "User Achievements",
                "db_table": "user_achievements",
            },
        ),
        migrations.CreateModel(
            name="SocialPost",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "post_type",
                    models.CharField(
                        choices=[
                            ("meme_launch", "Meme Launch"),
                            ("raid_join", "Raid Join"),
                            ("trade_share", "Trade Share"),
                            ("yield_farm", "Yield Farm"),
                            ("educational", "Educational"),
                            ("general", "General"),
                        ],
                        max_length=20,
                    ),
                ),
                ("content", models.TextField()),
                ("image_url", models.URLField(blank=True)),
                ("video_url", models.URLField(blank=True)),
                ("likes", models.IntegerField(default=0)),
                ("shares", models.IntegerField(default=0)),
                ("comments", models.IntegerField(default=0)),
                ("views", models.IntegerField(default=0)),
                ("xp_reward", models.IntegerField(default=10)),
                ("is_spotlight", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "meme_coin",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_posts",
                        to="core.memecoin",
                    ),
                ),
                (
                    "raid",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_posts",
                        to="core.raid",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "yield_position",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_posts",
                        to="core.yieldposition",
                    ),
                ),
            ],
            options={
                "verbose_name": "Social Post",
                "verbose_name_plural": "Social Posts",
                "db_table": "social_posts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RaidParticipation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=20)),
                ("xp_earned", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "raid",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participations",
                        to="core.raid",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="raid_participations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Raid Participation",
                "verbose_name_plural": "Raid Participations",
                "db_table": "raid_participations",
            },
        ),
        migrations.CreateModel(
            name="PostEngagement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "engagement_type",
                    models.CharField(
                        choices=[
                            ("like", "Like"),
                            ("share", "Share"),
                            ("comment", "Comment"),
                            ("view", "View"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="engagements",
                        to="core.socialpost",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="post_engagements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Post Engagement",
                "verbose_name_plural": "Post Engagements",
                "db_table": "post_engagements",
            },
        ),
        migrations.CreateModel(
            name="MemeQuestAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField()),
                ("daily_active_users", models.IntegerField(default=0)),
                ("new_users", models.IntegerField(default=0)),
                ("returning_users", models.IntegerField(default=0)),
                ("memes_created", models.IntegerField(default=0)),
                ("raids_joined", models.IntegerField(default=0)),
                ("yield_positions_opened", models.IntegerField(default=0)),
                ("social_posts_created", models.IntegerField(default=0)),
                ("voice_commands_processed", models.IntegerField(default=0)),
                ("total_likes", models.IntegerField(default=0)),
                ("total_shares", models.IntegerField(default=0)),
                ("total_comments", models.IntegerField(default=0)),
                ("total_views", models.IntegerField(default=0)),
                (
                    "total_volume",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=20
                    ),
                ),
                (
                    "total_fees",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=20
                    ),
                ),
                (
                    "total_yield_earned",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=20
                    ),
                ),
                ("bipoc_users_active", models.IntegerField(default=0)),
                ("bipoc_content_created", models.IntegerField(default=0)),
                ("community_contributions", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "MemeQuest Analytics",
                "verbose_name_plural": "MemeQuest Analytics",
                "db_table": "memequest_analytics",
                "indexes": [
                    models.Index(fields=["date"], name="memequest_a_date_11c072_idx")
                ],
                "unique_together": {("date",)},
            },
        ),
        migrations.AddField(
            model_name="memecoin",
            name="template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="core.memetemplate",
            ),
        ),
        migrations.CreateModel(
            name="YieldTransaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("stake", "Stake"),
                            ("unstake", "Unstake"),
                            ("harvest", "Harvest"),
                            ("compound", "Compound"),
                        ],
                        max_length=20,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=20)),
                ("tokens", models.JSONField(default=dict)),
                ("transaction_hash", models.CharField(blank=True, max_length=100)),
                ("gas_used", models.IntegerField(default=0)),
                (
                    "gas_price",
                    models.DecimalField(
                        decimal_places=0, default=Decimal("0"), max_digits=20
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("confirmed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "pool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="core.yieldpool",
                    ),
                ),
                (
                    "position",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="core.yieldposition",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="yield_transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Yield Transaction",
                "verbose_name_plural": "Yield Transactions",
                "db_table": "yield_transactions",
                "indexes": [
                    models.Index(
                        fields=["user", "transaction_type"],
                        name="yield_trans_user_id_1bac50_idx",
                    ),
                    models.Index(
                        fields=["pool", "transaction_type"],
                        name="yield_trans_pool_id_12903b_idx",
                    ),
                    models.Index(
                        fields=["status", "created_at"],
                        name="yield_trans_status_92185c_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="yieldposition",
            index=models.Index(
                fields=["user", "strategy"], name="yield_posit_user_id_f6aa06_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="yieldposition",
            index=models.Index(
                fields=["pool", "created_at"], name="yield_posit_pool_id_f02125_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="yieldposition",
            index=models.Index(
                fields=["auto_compound"], name="yield_posit_auto_co_56309b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="yieldpool",
            index=models.Index(
                fields=["protocol", "risk_level"], name="yield_pools_protoco_faeb16_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="yieldpool",
            index=models.Index(fields=["apy"], name="yield_pools_apy_e833df_idx"),
        ),
        migrations.AddIndex(
            model_name="yieldpool",
            index=models.Index(
                fields=["is_community_pool"], name="yield_pools_is_comm_8eadf0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="voicecommand",
            index=models.Index(
                fields=["user", "command_type"], name="voice_comma_user_id_37e810_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="voicecommand",
            index=models.Index(
                fields=["processed", "created_at"],
                name="voice_comma_process_7272bc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="voicecommand",
            index=models.Index(
                fields=["confidence"], name="voice_comma_confide_d6921b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userprofile",
            index=models.Index(
                fields=["current_streak"], name="user_profil_current_509d7b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userprofile",
            index=models.Index(
                fields=["total_xp"], name="user_profil_total_x_d62427_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userprofile",
            index=models.Index(
                fields=["is_bipoc"], name="user_profil_is_bipo_da8cd5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userprofile",
            index=models.Index(
                fields=["last_active"], name="user_profil_last_ac_f0c215_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userachievement",
            index=models.Index(
                fields=["user", "achievement_type"],
                name="user_achiev_user_id_1e0012_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="userachievement",
            index=models.Index(
                fields=["created_at"], name="user_achiev_created_a38fd3_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userachievement",
            unique_together={("user", "achievement_type")},
        ),
        migrations.AddIndex(
            model_name="socialpost",
            index=models.Index(
                fields=["user", "post_type"], name="social_post_user_id_967382_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="socialpost",
            index=models.Index(
                fields=["meme_coin", "created_at"],
                name="social_post_meme_co_90ff0f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="socialpost",
            index=models.Index(
                fields=["raid", "created_at"], name="social_post_raid_id_c6d393_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="socialpost",
            index=models.Index(
                fields=["is_spotlight", "created_at"],
                name="social_post_is_spot_468199_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="raidparticipation",
            index=models.Index(
                fields=["raid", "user"], name="raid_partic_raid_id_87e073_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="raidparticipation",
            index=models.Index(
                fields=["user", "created_at"], name="raid_partic_user_id_a3dee9_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="raidparticipation",
            unique_together={("raid", "user")},
        ),
        migrations.AddIndex(
            model_name="raid",
            index=models.Index(
                fields=["leader", "status"], name="raids_leader__99cb8e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="raid",
            index=models.Index(
                fields=["meme_coin", "status"], name="raids_meme_co_c09e2e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="raid",
            index=models.Index(fields=["start_time"], name="raids_start_t_643c84_idx"),
        ),
        migrations.AddIndex(
            model_name="postengagement",
            index=models.Index(
                fields=["post", "engagement_type"],
                name="post_engage_post_id_276a7f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="postengagement",
            index=models.Index(
                fields=["user", "engagement_type"],
                name="post_engage_user_id_129a4c_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="postengagement",
            unique_together={("post", "user", "engagement_type")},
        ),
        migrations.AddIndex(
            model_name="memecoin",
            index=models.Index(
                fields=["creator", "status"], name="meme_coins_creator_d2d81b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="memecoin",
            index=models.Index(
                fields=["network", "status"], name="meme_coins_network_6ea4af_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="memecoin",
            index=models.Index(
                fields=["created_at"], name="meme_coins_created_ce04cc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="memecoin",
            index=models.Index(
                fields=["cultural_theme"], name="meme_coins_cultura_55548d_idx"
            ),
        ),
    ]
