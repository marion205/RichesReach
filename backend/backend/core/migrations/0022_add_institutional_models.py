# Generated by Django 4.2.1 on 2025-09-17 11:48

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0021_auto_20250917_1146'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('ML_RECOMMENDATION', 'ML Portfolio Recommendation'), ('INSTITUTIONAL_RECOMMENDATION', 'Institutional Portfolio Recommendation'), ('MARKET_ANALYSIS', 'Market Analysis'), ('RISK_ANALYSIS', 'Risk Analysis'), ('OPTIMIZATION', 'Portfolio Optimization')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('request_id', models.CharField(max_length=100, unique=True)),
                ('input_data', models.JSONField()),
                ('output_data', models.JSONField(blank=True, null=True)),
                ('execution_time_ms', models.IntegerField(blank=True, null=True)),
                ('memory_usage_mb', models.FloatField(blank=True, null=True)),
                ('success', models.BooleanField()),
                ('error_message', models.TextField(blank=True)),
                ('model_version', models.CharField(blank=True, max_length=50)),
                ('feature_version', models.CharField(blank=True, max_length=50)),
                ('optimization_method', models.CharField(blank=True, max_length=50)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CorporateAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(db_index=True, max_length=10)),
                ('action_type', models.CharField(choices=[('DIVIDEND', 'Dividend'), ('SPLIT', 'Stock Split'), ('SPINOFF', 'Spinoff'), ('MERGER', 'Merger'), ('ACQUISITION', 'Acquisition')], max_length=20)),
                ('ex_date', models.DateField(db_index=True)),
                ('record_date', models.DateField(blank=True, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('ratio', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('source', models.CharField(default='api', max_length=50)),
            ],
            options={
                'ordering': ['-ex_date', 'symbol'],
            },
        ),
        migrations.CreateModel(
            name='MarketRegime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('as_of', models.DateField(db_index=True, unique=True)),
                ('regime', models.CharField(choices=[('BULL', 'Bull Market'), ('BEAR', 'Bear Market'), ('VOLATILE', 'High Volatility'), ('SIDEWAYS', 'Sideways'), ('CRISIS', 'Crisis')], max_length=20)),
                ('confidence', models.FloatField(help_text='Confidence score 0-1')),
                ('vix_level', models.FloatField(blank=True, null=True)),
                ('market_return', models.FloatField(blank=True, null=True)),
                ('volatility', models.FloatField(blank=True, null=True)),
                ('ml_prediction', models.JSONField(blank=True, null=True)),
                ('feature_importance', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('model_version', models.CharField(default='v1.0', max_length=50)),
            ],
            options={
                'ordering': ['-as_of'],
            },
        ),
        migrations.CreateModel(
            name='MLModelVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=50)),
                ('model_type', models.CharField(max_length=50)),
                ('file_path', models.CharField(max_length=500)),
                ('parameters', models.JSONField()),
                ('performance_metrics', models.JSONField(blank=True, null=True)),
                ('trained_on', models.DateField()),
                ('training_data_hash', models.CharField(help_text='SHA256 of training data', max_length=64)),
                ('is_active', models.BooleanField(default=False)),
                ('is_production', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shares', models.DecimalField(decimal_places=2, max_digits=10)),
                ('average_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('as_of', models.DateField(db_index=True)),
                ('holdings', models.JSONField(help_text='Portfolio holdings as of date')),
                ('total_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('cash_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('daily_return', models.FloatField(blank=True, null=True)),
                ('total_return', models.FloatField(blank=True, null=True)),
                ('volatility', models.FloatField(blank=True, null=True)),
                ('sharpe_ratio', models.FloatField(blank=True, null=True)),
                ('max_drawdown', models.FloatField(blank=True, null=True)),
                ('var_95', models.FloatField(blank=True, help_text='95% VaR', null=True)),
                ('cvar_95', models.FloatField(blank=True, help_text='95% CVaR', null=True)),
                ('beta', models.FloatField(blank=True, null=True)),
                ('tracking_error', models.FloatField(blank=True, null=True)),
                ('sector_allocation', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('source', models.CharField(default='system', max_length=50)),
            ],
            options={
                'ordering': ['-as_of'],
            },
        ),
        migrations.CreateModel(
            name='StockPriceSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(db_index=True, max_length=10)),
                ('as_of', models.DateField(db_index=True)),
                ('open_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('high_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('low_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('close', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('volume', models.BigIntegerField(blank=True, null=True)),
                ('adjusted_close', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dividend_amount', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('split_coefficient', models.DecimalField(decimal_places=6, default=1.0, max_digits=10)),
                ('adv_score', models.FloatField(blank=True, help_text='Average Daily Volume score', null=True)),
                ('volatility', models.FloatField(blank=True, help_text='30-day volatility', null=True)),
                ('beta', models.FloatField(blank=True, help_text='Beta vs market', null=True)),
                ('market_cap', models.BigIntegerField(blank=True, null=True)),
                ('pe_ratio', models.FloatField(blank=True, null=True)),
                ('dividend_yield', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source', models.CharField(default='api', help_text='Data source', max_length=50)),
            ],
            options={
                'ordering': ['-as_of', 'symbol'],
            },
        ),
        migrations.CreateModel(
            name='StockRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocation', models.FloatField()),
                ('reasoning', models.TextField()),
                ('risk_level', models.CharField(max_length=20)),
                ('expected_return', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='WatchlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='aiportfoliorecommendation',
            options={},
        ),
        migrations.AlterModelOptions(
            name='chatmessage',
            options={},
        ),
        migrations.AlterModelOptions(
            name='comment',
            options={},
        ),
        migrations.AlterModelOptions(
            name='discussioncomment',
            options={},
        ),
        migrations.AlterModelOptions(
            name='portfolio',
            options={},
        ),
        migrations.AlterModelOptions(
            name='stock',
            options={},
        ),
        migrations.AlterModelOptions(
            name='stockdata',
            options={},
        ),
        migrations.AlterModelOptions(
            name='stockdiscussion',
            options={},
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'user', 'verbose_name_plural': 'users'},
        ),
        migrations.AlterModelOptions(
            name='watchlist',
            options={},
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RemoveConstraint(
            model_name='follow',
            name='uq_follow_follower_following',
        ),
        migrations.RemoveConstraint(
            model_name='follow',
            name='ck_no_self_follow',
        ),
        migrations.RemoveConstraint(
            model_name='like',
            name='uq_like_user_post',
        ),
        migrations.RemoveConstraint(
            model_name='portfolio',
            name='uq_portfolio_user_stock',
        ),
        migrations.RemoveConstraint(
            model_name='stockdata',
            name='uq_stockdata_stock_date',
        ),
        migrations.RemoveConstraint(
            model_name='watchlist',
            name='uq_watchlist_user_stock',
        ),
        migrations.RemoveIndex(
            model_name='aiportfoliorecommendation',
            name='core_aiport_user_id_1edc54_idx',
        ),
        migrations.RemoveIndex(
            model_name='chatmessage',
            name='core_chatme_session_76a3ef_idx',
        ),
        migrations.RemoveIndex(
            model_name='chatmessage',
            name='core_chatme_role_7bd3b1_idx',
        ),
        migrations.RemoveIndex(
            model_name='chatsession',
            name='core_chatse_user_id_0e3ee1_idx',
        ),
        migrations.RemoveIndex(
            model_name='comment',
            name='core_commen_post_id_0d7c44_idx',
        ),
        migrations.RemoveIndex(
            model_name='discussioncomment',
            name='core_discus_discuss_9d2544_idx',
        ),
        migrations.RemoveIndex(
            model_name='discussioncomment',
            name='core_discus_parent__92e377_idx',
        ),
        migrations.RemoveIndex(
            model_name='follow',
            name='core_follow_followe_986d95_idx',
        ),
        migrations.RemoveIndex(
            model_name='follow',
            name='core_follow_followi_a11b6b_idx',
        ),
        migrations.RemoveIndex(
            model_name='like',
            name='core_like_post_id_777ee2_idx',
        ),
        migrations.RemoveIndex(
            model_name='portfolio',
            name='core_portfo_user_id_6b2c14_idx',
        ),
        migrations.RemoveIndex(
            model_name='post',
            name='core_post_user_id_5973f4_idx',
        ),
        migrations.RemoveIndex(
            model_name='stock',
            name='core_stock_sector_5d7e70_idx',
        ),
        migrations.RemoveIndex(
            model_name='stock',
            name='core_stock_last_up_19a192_idx',
        ),
        migrations.RemoveIndex(
            model_name='stockdata',
            name='core_stockd_stock_i_093590_idx',
        ),
        migrations.RemoveIndex(
            model_name='stockdiscussion',
            name='core_stockd_user_id_19e164_idx',
        ),
        migrations.RemoveIndex(
            model_name='stockdiscussion',
            name='core_stockd_stock_i_3709ff_idx',
        ),
        migrations.RemoveIndex(
            model_name='stockdiscussion',
            name='core_stockd_upvotes_605643_idx',
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='core_user_email_38052c_idx',
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='core_user_created_51fdf1_idx',
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='core_user_locked__28df2b_idx',
        ),
        migrations.RemoveIndex(
            model_name='watchlist',
            name='core_watchl_user_id_e22111_idx',
        ),
        migrations.RenameField(
            model_name='user',
            old_name='email_verified',
            new_name='hasPremiumAccess',
        ),
        migrations.RemoveField(
            model_name='aiportfoliorecommendation',
            name='recommended_stocks',
        ),
        migrations.RemoveField(
            model_name='aiportfoliorecommendation',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='chatmessage',
            name='confidence',
        ),
        migrations.RemoveField(
            model_name='chatmessage',
            name='role',
        ),
        migrations.RemoveField(
            model_name='chatmessage',
            name='tokens_used',
        ),
        migrations.RemoveField(
            model_name='chatmessage',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='chatsession',
            name='title',
        ),
        migrations.RemoveField(
            model_name='chatsession',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='discussioncomment',
            name='downvotes',
        ),
        migrations.RemoveField(
            model_name='discussioncomment',
            name='is_deleted',
        ),
        migrations.RemoveField(
            model_name='discussioncomment',
            name='parent_comment',
        ),
        migrations.RemoveField(
            model_name='discussioncomment',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='discussioncomment',
            name='upvotes',
        ),
        migrations.RemoveField(
            model_name='incomeprofile',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='incomeprofile',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='portfolio',
            name='average_price',
        ),
        migrations.RemoveField(
            model_name='portfolio',
            name='current_price',
        ),
        migrations.RemoveField(
            model_name='portfolio',
            name='notes',
        ),
        migrations.RemoveField(
            model_name='portfolio',
            name='shares',
        ),
        migrations.RemoveField(
            model_name='portfolio',
            name='stock',
        ),
        migrations.RemoveField(
            model_name='portfolio',
            name='total_value',
        ),
        migrations.RemoveField(
            model_name='post',
            name='image',
        ),
        migrations.RemoveField(
            model_name='source',
            name='message',
        ),
        migrations.RemoveField(
            model_name='source',
            name='snippet',
        ),
        migrations.RemoveField(
            model_name='source',
            name='title',
        ),
        migrations.RemoveField(
            model_name='source',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='stock',
            name='debt_ratio',
        ),
        migrations.RemoveField(
            model_name='stock',
            name='last_updated',
        ),
        migrations.RemoveField(
            model_name='stock',
            name='volatility',
        ),
        migrations.RemoveField(
            model_name='stockdiscussion',
            name='analysis_data',
        ),
        migrations.RemoveField(
            model_name='stockdiscussion',
            name='discussion_type',
        ),
        migrations.RemoveField(
            model_name='stockdiscussion',
            name='downvotes',
        ),
        migrations.RemoveField(
            model_name='stockdiscussion',
            name='is_analysis',
        ),
        migrations.RemoveField(
            model_name='stockdiscussion',
            name='is_locked',
        ),
        migrations.RemoveField(
            model_name='stockdiscussion',
            name='is_pinned',
        ),
        migrations.RemoveField(
            model_name='stockdiscussion',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='stockdiscussion',
            name='upvotes',
        ),
        migrations.RemoveField(
            model_name='stockdiscussion',
            name='visibility',
        ),
        migrations.RemoveField(
            model_name='user',
            name='failed_login_attempts',
        ),
        migrations.RemoveField(
            model_name='user',
            name='last_login_ip',
        ),
        migrations.RemoveField(
            model_name='user',
            name='locked_until',
        ),
        migrations.RemoveField(
            model_name='user',
            name='profile_pic',
        ),
        migrations.RemoveField(
            model_name='user',
            name='two_factor_enabled',
        ),
        migrations.RemoveField(
            model_name='user',
            name='two_factor_secret',
        ),
        migrations.RemoveField(
            model_name='watchlist',
            name='added_at',
        ),
        migrations.RemoveField(
            model_name='watchlist',
            name='description',
        ),
        migrations.RemoveField(
            model_name='watchlist',
            name='is_public',
        ),
        migrations.RemoveField(
            model_name='watchlist',
            name='is_shared',
        ),
        migrations.RemoveField(
            model_name='watchlist',
            name='notes',
        ),
        migrations.RemoveField(
            model_name='watchlist',
            name='stock',
        ),
        migrations.RemoveField(
            model_name='watchlist',
            name='target_price',
        ),
        migrations.RemoveField(
            model_name='watchlist',
            name='updated_at',
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='is_user',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='discussioncomment',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='liked_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='name',
            field=models.CharField(default='My Portfolio', max_length=100),
        ),
        migrations.AddField(
            model_name='source',
            name='name',
            field=models.CharField(default='Unknown Source', max_length=100),
        ),
        migrations.AddField(
            model_name='stock',
            name='avg_daily_dollar_volume',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stockdiscussion',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='liked_discussions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AddField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='first name'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='last name'),
        ),
        migrations.AddField(
            model_name='user',
            name='subscriptionTier',
            field=models.CharField(choices=[('BASIC', 'Basic'), ('PREMIUM', 'Premium'), ('ENTERPRISE', 'Enterprise')], default='BASIC', max_length=20),
        ),
        migrations.AddField(
            model_name='user',
            name='username',
            field=models.CharField(default='user', max_length=150, unique=True),
        ),
        migrations.AlterField(
            model_name='aiportfoliorecommendation',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='aiportfoliorecommendation',
            name='expected_portfolio_return',
            field=models.FloatField(default=0.0),
        ),
        migrations.AlterField(
            model_name='aiportfoliorecommendation',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='aiportfoliorecommendation',
            name='risk_assessment',
            field=models.TextField(default='No assessment available'),
        ),
        migrations.AlterField(
            model_name='aiportfoliorecommendation',
            name='risk_profile',
            field=models.CharField(default='Moderate', max_length=50),
        ),
        migrations.AlterField(
            model_name='aiportfoliorecommendation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aiRecommendations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='chatmessage',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='chatmessage',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='chatsession',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='chatsession',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='comment',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='discussioncomment',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='discussioncomment',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='follow',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='follow',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='incomeprofile',
            name='age',
            field=models.IntegerField(),
        ),
        migrations.AlterField(
            model_name='incomeprofile',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='incomeprofile',
            name='income_bracket',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='incomeprofile',
            name='investment_goals',
            field=models.JSONField(),
        ),
        migrations.AlterField(
            model_name='incomeprofile',
            name='investment_horizon',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='incomeprofile',
            name='risk_tolerance',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='like',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='like',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='post',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='source',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='source',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='source',
            name='url',
            field=models.URLField(default='https://example.com'),
        ),
        migrations.AlterField(
            model_name='stock',
            name='beginner_friendly_score',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='stock',
            name='company_name',
            field=models.CharField(max_length=200),
        ),
        migrations.AlterField(
            model_name='stock',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='stock',
            name='current_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='stock',
            name='dividend_yield',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='stock',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='stock',
            name='market_cap',
            field=models.BigIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='stock',
            name='pe_ratio',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='stock',
            name='sector',
            field=models.CharField(default='Unknown', max_length=100),
        ),
        migrations.AlterField(
            model_name='stock',
            name='symbol',
            field=models.CharField(max_length=10, unique=True),
        ),
        migrations.AlterField(
            model_name='stockdata',
            name='close_price',
            field=models.DecimalField(decimal_places=2, max_digits=10),
        ),
        migrations.AlterField(
            model_name='stockdata',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='stockdata',
            name='date',
            field=models.DateField(),
        ),
        migrations.AlterField(
            model_name='stockdata',
            name='high_price',
            field=models.DecimalField(decimal_places=2, max_digits=10),
        ),
        migrations.AlterField(
            model_name='stockdata',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='stockdata',
            name='low_price',
            field=models.DecimalField(decimal_places=2, max_digits=10),
        ),
        migrations.AlterField(
            model_name='stockdata',
            name='open_price',
            field=models.DecimalField(decimal_places=2, max_digits=10),
        ),
        migrations.AlterField(
            model_name='stockdata',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_data', to='core.stock'),
        ),
        migrations.AlterField(
            model_name='stockdata',
            name='volume',
            field=models.BigIntegerField(),
        ),
        migrations.AlterField(
            model_name='stockdiscussion',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='stockdiscussion',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='stockdiscussion',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussions', to='core.stock'),
        ),
        migrations.AlterField(
            model_name='stockdiscussion',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_discussions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='user',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AlterField(
            model_name='user',
            name='name',
            field=models.CharField(default='User', max_length=255),
        ),
        migrations.AlterField(
            model_name='watchlist',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='watchlist',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='watchlist',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterUniqueTogether(
            name='follow',
            unique_together={('follower', 'following')},
        ),
        migrations.AlterUniqueTogether(
            name='like',
            unique_together={('user', 'post')},
        ),
        migrations.AlterUniqueTogether(
            name='stockdata',
            unique_together={('stock', 'date')},
        ),
        migrations.AlterModelTable(
            name='comment',
            table=None,
        ),
        migrations.AlterModelTable(
            name='follow',
            table=None,
        ),
        migrations.AlterModelTable(
            name='like',
            table=None,
        ),
        migrations.AddField(
            model_name='watchlistitem',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.stock'),
        ),
        migrations.AddField(
            model_name='watchlistitem',
            name='watchlist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.watchlist'),
        ),
        migrations.AddField(
            model_name='stockrecommendation',
            name='portfolio_recommendation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_recommendations', to='core.aiportfoliorecommendation'),
        ),
        migrations.AddField(
            model_name='stockrecommendation',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.stock'),
        ),
        migrations.AddField(
            model_name='stockpricesnapshot',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_snapshots', to='core.stock'),
        ),
        migrations.AddField(
            model_name='portfoliosnapshot',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_snapshots', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='portfolioposition',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='core.portfolio'),
        ),
        migrations.AddField(
            model_name='portfolioposition',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.stock'),
        ),
        migrations.AddField(
            model_name='mlmodelversion',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='corporateaction',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='corporate_actions', to='core.stock'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='follow',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='like',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='stockdata',
            name='updated_at',
        ),
        migrations.AlterUniqueTogether(
            name='watchlistitem',
            unique_together={('watchlist', 'stock')},
        ),
        migrations.AddIndex(
            model_name='stockpricesnapshot',
            index=models.Index(fields=['symbol', 'as_of'], name='core_stockp_symbol_ae6b7f_idx'),
        ),
        migrations.AddIndex(
            model_name='stockpricesnapshot',
            index=models.Index(fields=['as_of', 'symbol'], name='core_stockp_as_of_9d453b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='stockpricesnapshot',
            unique_together={('stock', 'as_of')},
        ),
        migrations.AddIndex(
            model_name='portfoliosnapshot',
            index=models.Index(fields=['user', 'as_of'], name='core_portfo_user_id_08019c_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliosnapshot',
            index=models.Index(fields=['as_of'], name='core_portfo_as_of_27b370_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='portfoliosnapshot',
            unique_together={('user', 'as_of')},
        ),
        migrations.AlterUniqueTogether(
            name='mlmodelversion',
            unique_together={('name', 'version')},
        ),
        migrations.AddIndex(
            model_name='corporateaction',
            index=models.Index(fields=['symbol', 'ex_date'], name='core_corpor_symbol_b28e92_idx'),
        ),
        migrations.AddIndex(
            model_name='corporateaction',
            index=models.Index(fields=['ex_date', 'action_type'], name='core_corpor_ex_date_27d806_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['user', 'timestamp'], name='core_auditl_user_id_7b678c_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['action_type', 'timestamp'], name='core_auditl_action__64f4df_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['timestamp'], name='core_auditl_timesta_80074f_idx'),
        ),
    ]
